<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="added" xml:space="preserve">
    <value>added</value>
  </data>
  <data name="AddedArtist" xml:space="preserve">
    <value>Artist has been added:  </value>
  </data>
  <data name="AddedSong" xml:space="preserve">
    <value>Song has been added:  </value>
  </data>
  <data name="AddedStyle" xml:space="preserve">
    <value>Genre has been added:  </value>
  </data>
  <data name="AddingAndEditingHall" xml:space="preserve">
    <value>Adding/Editing rooms</value>
  </data>
  <data name="Addition" xml:space="preserve">
    <value>Addition</value>
  </data>
  <data name="AddSong" xml:space="preserve">
    <value>Add Song</value>
  </data>
  <data name="AdminDetails" xml:space="preserve">
    <value>Admin details</value>
  </data>
  <data name="AdminProfileNameErrorMessage" xml:space="preserve">
    <value>The 'Name' field must contain letters only</value>
  </data>
  <data name="Admins" xml:space="preserve">
    <value>All admins</value>
  </data>
  <data name="AddTimeForCharts" xml:space="preserve">
    <value>Add_time_for_charts</value>
  </data>
  <data name="age" xml:space="preserve">
    <value>age</value>
  </data>
  <data name="AgeRequired" xml:space="preserve">
    <value>*age is required</value>
  </data>
  <data name="Album" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="AllSc" xml:space="preserve">
    <value>All saved charts</value>
  </data>
  <data name="AllSongs" xml:space="preserve">
    <value>All gyms</value>
  </data>
  <data name="Artist" xml:space="preserve">
    <value>Adding a gym</value>
  </data>
  <data name="Artists" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="ArtSort" xml:space="preserve">
    <value>singers</value>
  </data>
  <data name="Authorization" xml:space="preserve">
    <value>Authorization</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangeAdmin" xml:space="preserve">
    <value>Change of the admin</value>
  </data>
  <data name="Changelevel" xml:space="preserve">
    <value>Change level</value>
  </data>
  <data name="changePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ChooseLang" xml:space="preserve">
    <value>Choose the Language</value>
  </data>
  <data name="chooseTime" xml:space="preserve">
    <value>Select time for schedule</value>
  </data>
  <data name="Coaches" xml:space="preserve">
    <value>All coaches</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmDeletingARoom" xml:space="preserve">
    <value>Confirm deleting the room</value>
  </data>
  <data name="Confirmdeletion" xml:space="preserve">
    <value>Confirm deletion</value>
  </data>
  <data name="Confirmdusers" xml:space="preserve">
    <value>Confirmd users</value>
  </data>
  <data name="Confirmregistration" xml:space="preserve">
    <value>Confirm registration</value>
  </data>
  <data name="CreateTime" xml:space="preserve">
    <value>Create time</value>
  </data>
  <data name="Create_A_ScheduleForDay" xml:space="preserve">
    <value>Create a graphic for the day</value>
  </data>
  <data name="DateB" xml:space="preserve">
    <value>Date of Birth</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteAdmin" xml:space="preserve">
    <value>Removing an admin</value>
  </data>
  <data name="DeleteAdminQuestion" xml:space="preserve">
    <value>Are you sure you want to remove the admin?</value>
  </data>
  <data name="DeleteAdminQuestion2" xml:space="preserve">
    <value>Do you want to permanently delete your profile?</value>
  </data>
  <data name="DeleteAndExit" xml:space="preserve">
    <value>Delete and exit</value>
  </data>
  <data name="DeleteArt" xml:space="preserve">
    <value>Delete the Artist</value>
  </data>
  <data name="DeleteCoachPost" xml:space="preserve">
    <value>Removing a coach position</value>
  </data>
  <data name="DeleteCoachSpec" xml:space="preserve">
    <value>Removing a trainer specialty</value>
  </data>
  <data name="DeletedArtist" xml:space="preserve">
    <value>The singer was removed:  </value>
  </data>
  <data name="DeletedStyle" xml:space="preserve">
    <value>Genre removed:  </value>
  </data>
  <data name="DeleteTime" xml:space="preserve">
    <value>Delete Time</value>
  </data>
  <data name="DelSong" xml:space="preserve">
    <value>Song has been removed:  </value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Dopname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="EdArtist" xml:space="preserve">
    <value>Artist edited:  </value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditArt" xml:space="preserve">
    <value>Edit the Artist</value>
  </data>
  <data name="edited" xml:space="preserve">
    <value>edited</value>
  </data>
  <data name="Editing" xml:space="preserve">
    <value>Editing</value>
  </data>
  <data name="EditRoom" xml:space="preserve">
    <value>Editing of the room</value>
  </data>
  <data name="EditSong" xml:space="preserve">
    <value>Edit the Song</value>
  </data>
  <data name="EdSong" xml:space="preserve">
    <value>Song edited:  </value>
  </data>
  <data name="EdStyle" xml:space="preserve">
    <value>Genre edited:</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>*email required</value>
  </data>
  <data name="emailused" xml:space="preserve">
    <value>*email is used</value>
  </data>
  <data name="endT" xml:space="preserve">
    <value>End time</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="enterArt" xml:space="preserve">
    <value>Enter the Name</value>
  </data>
  <data name="enterName" xml:space="preserve">
    <value>Enter the name</value>
  </data>
  <data name="EnterNewPassword" xml:space="preserve">
    <value>Enter new password</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="female" xml:space="preserve">
    <value>female</value>
  </data>
  <data name="fields" xml:space="preserve">
    <value>*enter all fields</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Filtr" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="FiltrBy" xml:space="preserve">
    <value>Filter by:</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="Forward" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Genres" xml:space="preserve">
    <value>Genres</value>
  </data>
  <data name="GraphOfDay" xml:space="preserve">
    <value>Graph of day</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="LightPass" xml:space="preserve">
    <value>more than 8 characters, at least one digit, one(A-Z), one(a-z), one special character</value>
  </data>
  <data name="Listofartists" xml:space="preserve">
    <value>Choose an artist from the list</value>
  </data>
  <data name="Listofstyles" xml:space="preserve">
    <value>Choose a genre from the list</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginLength" xml:space="preserve">
    <value>The login length must be from 3 to 15 characters</value>
  </data>
  <data name="loginN" xml:space="preserve">
    <value>login</value>
  </data>
  <data name="loginpassword" xml:space="preserve">
    <value>login/password  not correct</value>
  </data>
  <data name="loginused" xml:space="preserve">
    <value>*login is used</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>LogOut</value>
  </data>
  <data name="LogRequired" xml:space="preserve">
    <value>*login is required</value>
  </data>
  <data name="MakeCh" xml:space="preserve">
    <value>Creating a daily schedule</value>
  </data>
  <data name="MakeTime" xml:space="preserve">
    <value>Create time for charts</value>
  </data>
  <data name="man" xml:space="preserve">
    <value>male</value>
  </data>
  <data name="MusicPortal" xml:space="preserve">
    <value>Music Portal</value>
  </data>
  <data name="MyWorkouts" xml:space="preserve">
    <value>My workouts</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="nameArt" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Newusers" xml:space="preserve">
    <value>New users</value>
  </data>
  <data name="oDay" xml:space="preserve">
    <value>DAY_OFF</value>
  </data>
  <data name="PassConRequired" xml:space="preserve">
    <value>*confirm password is required</value>
  </data>
  <data name="passnoteq" xml:space="preserve">
    <value>*passwords are not equal</value>
  </data>
  <data name="PassRequired" xml:space="preserve">
    <value>*password is required</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>password</value>
  </data>
  <data name="PasswordChangeError" xml:space="preserve">
    <value>Password change error</value>
  </data>
  <data name="passwordConf" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="PositionsAndSpecialties" xml:space="preserve">
    <value>Positions/Specialties</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Job title</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registgration</value>
  </data>
  <data name="RegistrationM" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>is Required</value>
  </data>
  <data name="RoomName" xml:space="preserve">
    <value>Room name</value>
  </data>
  <data name="Rooms" xml:space="preserve">
    <value>Rooms</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="saveSc" xml:space="preserve">
    <value>Save_schedule</value>
  </data>
  <data name="SavT" xml:space="preserve">
    <value>Saved time</value>
  </data>
  <data name="SavedTime" xml:space="preserve">
    <value>Saved time</value>
  </data>
  <data name="Shedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="Songname" xml:space="preserve">
    <value>Song's name</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort by:</value>
  </data>
  <data name="Speciality" xml:space="preserve">
    <value>Speciality</value>
  </data>
  <data name="startT" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="StyleSort" xml:space="preserve">
    <value>genre</value>
  </data>
  <data name="Subcrip" xml:space="preserve">
    <value>Subscription</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="TimeAndSchedule" xml:space="preserve">
    <value>Time/schedule</value>
  </data>
  <data name="TimeEnd" xml:space="preserve">
    <value>End time</value>
  </data>
  <data name="TimeStart" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="unage" xml:space="preserve">
    <value>*uncorrectly age</value>
  </data>
  <data name="unemail" xml:space="preserve">
    <value>*uncorrectly email</value>
  </data>
  <data name="unlogpass" xml:space="preserve">
    <value>*uncorrectly login or password</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>user name</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>All users</value>
  </data>
  <data name="waiting" xml:space="preserve">
    <value>waiting for confirm registration</value>
  </data>
  <data name="WarningAboutDeletingTheRoom" xml:space="preserve">
    <value>It's schedule and all training sessions will be deleted!</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="YearSort" xml:space="preserve">
    <value>year</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="CoachPhoto" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="CreateTimeAndScheduleForDay" xml:space="preserve">
    <value>Create  time/schedule for day</value>
  </data>
  <data name="MyError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Sucsess" xml:space="preserve">
    <value>Successfully</value>
  </data>
  <data name="TimeMes1" xml:space="preserve">
    <value>Fill in the start and end times!</value>
  </data>
  <data name="TimeMes2" xml:space="preserve">
    <value>This time is already in the database!</value>
  </data>
  <data name="TimeMes3" xml:space="preserve">
    <value>Training time cannot be shorter than 30 minutes</value>
  </data>
  <data name="TimeMes4" xml:space="preserve">
    <value>end time must be later than start time</value>
  </data>
  <data name="TimeMes5" xml:space="preserve">
    <value>Enter time in 00:00 format</value>
  </data>
  <data name="TimeMes6" xml:space="preserve">
    <value>incorrect editing</value>
  </data>
  <data name="TimeMes7" xml:space="preserve">
    <value>Time will be edited in all charts and schedules!</value>
  </data>
</root>